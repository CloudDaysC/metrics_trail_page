max(ruta_6$distance)
max(ruta_7$distance)
max(ruta_matt$distance)
sum(ruta_1$delta_elev[ruta_1$delta_elev > 0])
tabla <- data.frame( "Distancia" = c(max(ruta_1$distance),
max(ruta_2$distance),
max(ruta_3$distance),
max(ruta_4$distance),
max(ruta_5$distance),
max(ruta_6$distance),
max(ruta_7$distance),
max(ruta_matt$distance)),
"ElevGain" =  c(sum(ruta_1$delta_elev[ruta_1$delta_elev > 0]),
sum(ruta_2$delta_elev[ruta_2$delta_elev > 0]),
sum(ruta_3$delta_elev[ruta_3$delta_elev > 0]),
sum(ruta_4$delta_elev[ruta_4$delta_elev > 0]),
sum(ruta_5$delta_elev[ruta_5$delta_elev > 0]),
sum(ruta_6$delta_elev[ruta_6$delta_elev > 0]),
sum(ruta_7$delta_elev[ruta_7$delta_elev > 0]),
sum(ruta_matt$delta_elev[ruta_matt$delta_elev > 0])))
View(tabla)
tabla <- data.frame( "Distancia" = c(max(ruta_1$distance),
max(ruta_2$distance),
max(ruta_3$distance),
max(ruta_4$distance),
max(ruta_5$distance),
max(ruta_6$distance),
max(ruta_7$distance),
max(ruta_matt$distance)),
"ElevGain" =  c(sum(ruta_1$delta_elev[ruta_1$delta_elev > 0]),
sum(ruta_2$delta_elev[ruta_2$delta_elev > 0]),
sum(ruta_3$delta_elev[ruta_3$delta_elev > 0]),
sum(ruta_4$delta_elev[ruta_4$delta_elev > 0]),
sum(ruta_5$delta_elev[ruta_5$delta_elev > 0]),
sum(ruta_6$delta_elev[ruta_6$delta_elev > 0]),
sum(ruta_7$delta_elev[ruta_7$delta_elev > 0]),
sum(ruta_matt$delta_elev[ruta_matt$delta_elev > 0])),
"Ruta" = c(1,2,3,4,5,6,7,"Matt"))
View(tabla)
print(tabla)
tabla <- data.frame( "Ruta" = c(1,2,3,4,5,6,7,"Matt"),
"Distancia" = c(max(ruta_1$distance),
max(ruta_2$distance),
max(ruta_3$distance),
max(ruta_4$distance),
max(ruta_5$distance),
max(ruta_6$distance),
max(ruta_7$distance),
max(ruta_matt$distance)),
"ElevGain" =  c(sum(ruta_1$delta_elev[ruta_1$delta_elev > 0]),
sum(ruta_2$delta_elev[ruta_2$delta_elev > 0]),
sum(ruta_3$delta_elev[ruta_3$delta_elev > 0]),
sum(ruta_4$delta_elev[ruta_4$delta_elev > 0]),
sum(ruta_5$delta_elev[ruta_5$delta_elev > 0]),
sum(ruta_6$delta_elev[ruta_6$delta_elev > 0]),
sum(ruta_7$delta_elev[ruta_7$delta_elev > 0]),
sum(ruta_matt$delta_elev[ruta_matt$delta_elev > 0])))
print(tabla)
Derivatives <- function(data, alpha=.05){
require(geosphere)
# calculate previous long / lat
data$point2_lat = c(0,data$lat[-nrow(data)])
data$point2_long = c(0,data$long[-nrow(data)])
# haversise distance between each point and previous one
data$delta_distance = distHaversine(cbind(data$long,data$lat),
cbind(data$point2_long,data$point2_lat))
data$delta_distance[1] = 0
# calculate cumulative distance and drop auxiliar variables
data$distance = cumsum(data$delta_distance)
data$point2_lat = NULL
data$point2_long = NULL
data$delta_elev = c(0,diff(data$elev,lag=1))
data$delta_elev[1] = 0
data$grade = ( data$delta_elev / data$delta_distance )
data$grade[1] = 0
data[data$delta_distance == 0,]$grade = 0
if(!is.null(data$time)){
# calculate difference in time and elevation between readings
data$delta_time = c(0,diff(data$time,lag=1))
data$delta_time[1] = 0
# calculate derivatives: vertical and horizonal velocity, and grade
data$vert_velocity = data$delta_elev / data$delta_time
data$vert_velocity[1] = 0
data$hz_velocity = data$delta_distance / data$delta_time
data$hz_velocity[1] = 0
}
# return eriched dataset
return(data)
}
ruta_1 <- ruta_1 %>% Derivatives()
ruta_2 <- ruta_2 %>% Derivatives()
ruta_3 <- ruta_3 %>% Derivatives()
ruta_4 <- ruta_4 %>% Derivatives()
ruta_5 <- ruta_5 %>% Derivatives()
ruta_1$elev = extract(raster_map, ruta1sp)
ruta_2$elev = extract(raster_map, ruta2sp)
ruta_3$elev = extract(raster_map, ruta3sp)
ruta_4$elev = extract(raster_map, ruta4sp)
ruta_5$elev = extract(raster_map, ruta5sp)
ruta_6$elev = extract(raster_map, ruta6sp)
ruta_7$elev = extract(raster_map, ruta7sp)
ruta_matt$elev = extract(raster_map, rutaMsp)
ruta_1 <- ruta_1 %>% Derivatives()
ruta_2 <- ruta_2 %>% Derivatives()
ruta_3 <- ruta_3 %>% Derivatives()
ruta_4 <- ruta_4 %>% Derivatives()
ruta_5 <- ruta_5 %>% Derivatives()
ruta_6 <- ruta_6 %>% Derivatives()
ruta_7 <- ruta_7 %>% Derivatives()
ruta_matt <- ruta_matt %>% Derivatives()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
colnames(ruta_1) <- c("long", "lat")
# saca valores del raster
ruta_1$elev = extract(raster_map, ruta1sp)
# saca valores del raster
ruta_1$elev = extract(raster_map, ruta1sp)
ruta_1 <- ruta_1 %>% Derivatives()
library(elevatr)
source("C:/Users/raimu/Dropbox/Github/EnduranceSports/R/Derivatives.R")
tabla$Distancia <- round(tabla$Distancia / 1000 )
View(tabla)
tabla$ElevGain <- round(tabla$ElevGain )
print(tabla)
df_print(tabla)
rhandsontable(tabla, width = 600, height = 300)
library(handsontable)
---
title: "Rutas posibles para el Andes Azul Round"
author: "Raimundo Sanchez, PhD"
date: "13-10-2020"
output: html_document:
df_print: paged
getwd()
library(googlePolylines)
encode(ruta1sp)
? encode
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
library(rgdal)
library(sp)
library(leaflet)
library(raster)
library(plotKML)
library(elevatr)
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
colnames(ruta_1) <- c("long", "lat")
encode(ruta_1)
aa <- decode(encode(ruta_1))
ruta_1
(ruta_1$long)
ruta_1$long <- round(ruta_1$long,4)
ruta_1$lat <- round(ruta_1$lat,4)
ruta_1 <- unique(ruta_1)
ruta_1$long <- round(ruta_1$long,3)
ruta_1$lat <- round(ruta_1$lat,3)
ruta_1 <- unique(ruta_1)
colnames(ruta_1) <- c("long", "lat")
colnames(ruta_2) <- c("long", "lat")
colnames(ruta_3) <- c("long", "lat")
colnames(ruta_4) <- c("long", "lat")
colnames(ruta_5) <- c("long", "lat")
colnames(ruta_6) <- c("long", "lat")
colnames(ruta_7) <- c("long", "lat")
colnames(ruta_matt) <- c("long", "lat")
ruta_1$long <- round(ruta_1$long,3)
ruta_1$lat <- round(ruta_1$lat,3)
ruta_1 <- unique(ruta_1)
ruta_2$long <- round(ruta_2$long,3)
ruta_2$lat <- round(ruta_2$lat,3)
ruta_2 <- unique(ruta_2)
ruta_3$long <- round(ruta_3$long,3)
ruta_3$lat <- round(ruta_3$lat,3)
ruta_3 <- unique(ruta_3)
ruta_4$long <- round(ruta_4$long,3)
ruta_4$lat <- round(ruta_4$lat,3)
ruta_4 <- unique(ruta_4)
ruta_5$long <- round(ruta_5$long,3)
ruta_5$lat <- round(ruta_5$lat,3)
ruta_5 <- unique(ruta_5)
ruta_6$long <- round(ruta_6$long,3)
ruta_6$lat <- round(ruta_6$lat,3)
ruta_6 <- unique(ruta_6)
ruta_7$long <- round(ruta_7$long,3)
ruta_7$lat <- round(ruta_7$lat,3)
ruta_7 <- unique(ruta_7)
ruta_matt$long <- round(ruta_matt$long,3)
ruta_matt$lat <- round(ruta_matt$lat,3)
ruta_matt <- unique(ruta_matt)
raster_map <- get_elev_raster(rutaMsp,14)
# saca valores del raster
ruta_1$elev = extract(raster_map, ruta1sp)
saveRDS(raster_map,"raster_DEM.RData")
loadRDS(raster_map,"raster_DEM.RData")
readRDS(raster_map,"raster_DEM.RData")
raster_map <- readRDS("raster_DEM.RData")
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,3)
ruta$lat <- round(ruta$lat,3)
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(ruta)
}
ruta_matt <- readOGR("Matts Andes Azul Round.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_3 <- readOGR("2020-12-22_grupo_KB.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_4 <- readOGR("Ruta, grupo 4.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_7 <- readOGR("RUTA FINAL GRUPO 7.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_2 <- readOGR("ruta_examen.gpx" ,"tracks")
ruta_2 <- do.call("rbind",do.call("rbind", coordinates(ruta_2))) %>% data.frame()
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_5 <- readGPX("mapa ruta examen.gpx")
ruta_5 <- do.call("rbind",do.call("rbind", ruta_5$routes)) %>% t()
ruta_5 <- ruta_5 %>% data.frame()
ruta_5 <- ruta_5[,1:2]
ruta_5$lon <- as.numeric(ruta_5$lon)
ruta_5$lat <- as.numeric(ruta_5$lat)
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,3)
ruta$lat <- round(ruta$lat,3)
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(ruta)
}
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,3)
ruta$lat <- round(ruta$lat,3)
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(c("ruta"=ruta,"rutasp"=rutasp))
}
ruta_1 <- ordena_ruta(ruta_1)
ordena_ruta(ruta_1)$ruta
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- ordena_ruta(ruta_1)$ruta
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,3)
ruta$lat <- round(ruta$lat,3)
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- ordena_ruta(ruta_1)$ruta
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long*2,4)/2
ruta$lat <- round(ruta$lat*2,4)/2
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta$long <- round(ruta$long,4)
ruta$lat <- round(ruta$lat,4)
library(rgdal)
library(sp)
library(leaflet)
library(raster)
library(plotKML)
library(elevatr)
source("C:/Users/raimu/Dropbox/Github/EnduranceSports/R/Derivatives.R")
raster_map <- readRDS("raster_DEM.RData")
#cargo cumbres
andes_azul <- read.table("andes_azul.csv", sep = ";", dec = ",")
## cambio los nombres de las columnas
colnames(andes_azul) <- c("Cumbre", "elev", "lat", "long")
aar_sp <- SpatialPointsDataFrame(data=andes_azul[,4:3],  coords=andes_azul[,4:3], proj4string=CRS("+proj=longlat +datum=WGS84"))
#cargo alternativas de rutas
ruta_matt <- readOGR("Matts Andes Azul Round.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_3 <- readOGR("2020-12-22_grupo_KB.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_4 <- readOGR("Ruta, grupo 4.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_7 <- readOGR("RUTA FINAL GRUPO 7.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_2 <- readOGR("ruta_examen.gpx" ,"tracks")
ruta_2 <- do.call("rbind",do.call("rbind", coordinates(ruta_2))) %>% data.frame()
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_5 <- readGPX("mapa ruta examen.gpx")
ruta_5 <- do.call("rbind",do.call("rbind", ruta_5$routes)) %>% t()
ruta_5 <- ruta_5 %>% data.frame()
ruta_5 <- ruta_5[,1:2]
ruta_5$lon <- as.numeric(ruta_5$lon)
ruta_5$lat <- as.numeric(ruta_5$lat)
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,4)
ruta$lat <- round(ruta$lat,4)
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta_1 <- ordena_ruta(ruta_1)
ruta_2 <- ordena_ruta(ruta_2)
ruta_3 <- ordena_ruta(ruta_3)
ruta_4 <- ordena_ruta(ruta_4)
ruta_5 <- ordena_ruta(ruta_5)
ruta_6 <- ordena_ruta(ruta_6)
ruta_7 <- ordena_ruta(ruta_7)
ruta_matt <- ordena_ruta(ruta_matt)
ruta$delta_distancia
ruta_1$delta_distancia
ruta <- ruta_1$ruta
quantile(ruta$delta_distance,.9)
quantile(ruta$delta_distance,.1)
sample(1:300,3)
ruta <- ruta[ruta$delta_distancia > quantile(ruta$delta_distance,.1)]
ruta <- ruta_1$ruta
ruta[ruta$delta_distancia > quantile(ruta$delta_distance,.1),]
ruta <- ruta[ruta$delta_distancia > quantile(ruta$delta_distance,.1),]
sample(1:nrow(ruta),500)
ruta <- ruta_1$ruta
ruta[sample(1:nrow(ruta),500),]
ruta <- ruta[sample(1:nrow(ruta),500),]
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,4)
ruta$lat <- round(ruta$lat,4)
ruta <- unique(ruta)
ruta <- ruta[sample(1:nrow(ruta),500),]
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long,3)
ruta$lat <- round(ruta$lat,3)
ruta <- unique(ruta)
ruta <- ruta[sample(1:nrow(ruta),500),]
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta$delta_distance
quantile(ruta$delta_distance, .1)
ruta <- ruta[ruta$delta_distance  > quantile(ruta$delta_distance, .1),]
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long*2,3)/2
ruta$lat <- round(ruta$lat*2,3)/2
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
ruta <- ruta[ruta$delta_distance  > quantile(ruta$delta_distance, .1),]
ruta <- ruta[sample(1:nrow(ruta),500),]
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
return(list("ruta"=ruta,"rutasp"=rutasp))
}
sample(1:nrow(ruta),500,TRUE)
library(rgdal)
library(sp)
library(leaflet)
library(raster)
library(plotKML)
library(elevatr)
source("C:/Users/raimu/Dropbox/Github/EnduranceSports/R/Derivatives.R")
raster_map <- readRDS("raster_DEM.RData")
#cargo cumbres
andes_azul <- read.table("andes_azul.csv", sep = ";", dec = ",")
## cambio los nombres de las columnas
colnames(andes_azul) <- c("Cumbre", "elev", "lat", "long")
aar_sp <- SpatialPointsDataFrame(data=andes_azul[,4:3],  coords=andes_azul[,4:3], proj4string=CRS("+proj=longlat +datum=WGS84"))
#cargo alternativas de rutas
ruta_matt <- readOGR("Matts Andes Azul Round.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_3 <- readOGR("2020-12-22_grupo_KB.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_4 <- readOGR("Ruta, grupo 4.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_7 <- readOGR("RUTA FINAL GRUPO 7.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_2 <- readOGR("ruta_examen.gpx" ,"tracks")
ruta_2 <- do.call("rbind",do.call("rbind", coordinates(ruta_2))) %>% data.frame()
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_5 <- readGPX("mapa ruta examen.gpx")
ruta_5 <- do.call("rbind",do.call("rbind", ruta_5$routes)) %>% t()
ruta_5 <- ruta_5 %>% data.frame()
ruta_5 <- ruta_5[,1:2]
ruta_5$lon <- as.numeric(ruta_5$lon)
ruta_5$lat <- as.numeric(ruta_5$lat)
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
ruta$long <- round(ruta$long*2,4)
ruta$lat <- round(ruta$lat*2,4)
ruta <- unique(ruta)
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
ruta <- ruta[ruta$delta_distance  > quantile(ruta$delta_distance, .3),]
ruta <- ruta[sample(1:nrow(ruta),500,TRUE),]
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta_1 <- ordena_ruta(ruta_1)
ruta <- ruta_1
library(rgdal)
library(sp)
library(leaflet)
library(raster)
library(raster)
library(plotKML)
library(raster)
library(plotKML)
library(elevatr)
source("C:/Users/raimu/Dropbox/Github/EnduranceSports/R/Derivatives.R")
raster_map <- readRDS("raster_DEM.RData")
#cargo cumbres
andes_azul <- read.table("andes_azul.csv", sep = ";", dec = ",")
## cambio los nombres de las columnas
colnames(andes_azul) <- c("Cumbre", "elev", "lat", "long")
aar_sp <- SpatialPointsDataFrame(data=andes_azul[,4:3],  coords=andes_azul[,4:3], proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta_matt <- readOGR("Matts Andes Azul Round.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_3 <- readOGR("2020-12-22_grupo_KB.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_4 <- readOGR("Ruta, grupo 4.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_7 <- readOGR("RUTA FINAL GRUPO 7.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_2 <- readOGR("ruta_examen.gpx" ,"tracks")
ruta_2 <- readOGR("ruta_examen.gpx" ,"tracks")
ruta_2 <- do.call("rbind",do.call("rbind", coordinates(ruta_2))) %>% data.frame()
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
coordinates(ruta_6)
ruta_6 <- do.call("rbind", coordinates(ruta_6)) %>% data.frame()
View(ruta_6)
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_5 <- readGPX("mapa ruta examen.gpx")
ruta_5 <- readGPX("mapa ruta examen.gpx")
ruta_5 <- do.call("rbind",do.call("rbind", ruta_5$routes)) %>% t()
ruta_5 <- do.call("rbind",do.call("rbind", ruta_5$routes)) %>% t()
ruta_matt <- readOGR("Matts Andes Azul Round.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_1 <- readOGR("GPX Ruta G1.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_3 <- readOGR("2020-12-22_grupo_KB.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_4 <- readOGR("Ruta, grupo 4.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_7 <- readOGR("RUTA FINAL GRUPO 7.gpx","tracks") %>% coordinates() %>% data.frame()
ruta_2 <- readOGR("ruta_examen.gpx" ,"tracks")
ruta_2 <- do.call("rbind",do.call("rbind", coordinates(ruta_2))) %>% data.frame()
ruta_6 <- readOGR("Ruta Grupo 6.gpx","tracks")
ruta_6 <- do.call("rbind",do.call("rbind", coordinates(ruta_6))) %>% data.frame()
ruta_5 <- readGPX("mapa ruta examen.gpx")
do.call("rbind", ruta_5$routes)
print(do.call("rbind", ruta_5$routes))
do.call("rbind",do.call("rbind", ruta_5$routes))
ruta_5 <- do.call("rbind",do.call("rbind", ruta_5$routes))
ruta_5 <- readGPX("mapa ruta examen.gpx")
ruta_5 <- do.call("rbind", ruta_5$routes)
ruta_5 <- ruta_5[,1:2]
ruta_5$lon <- as.numeric(ruta_5$lon)
ruta_5$lat <- as.numeric(ruta_5$lat)
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
ruta_comp <- ruta
ruta_comp$long <- round(ruta_comp$long,3)
ruta_comp$lat <- round(ruta_comp$lat,3)
ruta_comp <- unique(ruta_comp)
ruta_comp <- ruta_comp[ruta_comp$delta_distance  > quantile(ruta_comp$delta_distance, .2),]
ruta_comp <- ruta_comp[sample(1:nrow(ruta_comp),600,TRUE),]
rutasp <- SpatialPointsDataFrame(data=ruta_comp, coords = ruta_comp, proj4string=CRS("+proj=longlat +datum=WGS84"))
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta_1 <- ordena_ruta(ruta_1)
ruta_2 <- ordena_ruta(ruta_2)
ruta_3 <- ordena_ruta(ruta_3)
ruta_4 <- ordena_ruta(ruta_4)
ruta_5 <- ordena_ruta(ruta_5)
ordena_ruta <- function(ruta){
colnames(ruta) <- c("long", "lat")
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
ruta <- ruta %>% Derivatives()
ruta_comp <- ruta
ruta_comp$long <- round(ruta_comp$long,3)
ruta_comp$lat <- round(ruta_comp$lat,3)
ruta_comp <- unique(ruta_comp)
ruta_comp <- ruta_comp[ruta_comp$delta_distance  > quantile(ruta_comp$delta_distance, .2),]
ruta_comp <- ruta_comp[sample(1:nrow(ruta_comp),600,TRUE),]
rutasp <- SpatialPointsDataFrame(data=ruta_comp, coords = ruta_comp, proj4string=CRS("+proj=longlat +datum=WGS84"))
return(list("ruta"=ruta,"rutasp"=rutasp))
}
ruta_1 <- ordena_ruta(ruta_1)
ordena_ruta(ruta_1)
ruta <- ruta_1
colnames(ruta) <- c("long", "lat")
rutasp <- SpatialPointsDataFrame(data=ruta, coords = ruta, proj4string=CRS("+proj=longlat +datum=WGS84"))
ruta$elev = extract(raster_map, rutasp)
raster_map <- readRDS("raster_DEM.RData")
extract(raster_map, rutasp)
View(raster_map)
plot(raster_map)
raster_map <- get_elev_raster(aar_sp, z=14)
