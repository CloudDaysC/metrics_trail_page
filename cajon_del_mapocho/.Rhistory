)
print(tabla)
knitr::opts_chunk$set(echo = TRUE)
library(GPStream)
library(sp)
library(leaflet)
library(tidyverse)
ruta_strm <-
read_stream_file("cajon_del_mapocho.gpx") %>%
rename_stream() %>%
differential_stream()
ruta_sp <- SpatialPointsDataFrame(data=ruta_strm,
coords = ruta_strm[,c("lon","lat")],
proj4string=CRS("+proj=longlat +datum=WGS84"))
PCS <- c(9.65, 22.05, 33.35, 42.05, 45.7, 50.82, 63.5, 81.55, 87.7)
tramo1 <- ruta_strm %>% filter(distance <= PCS[1])
tramo2 <- ruta_strm %>% filter(distance > PCS[1] & distance <= PCS[2])
tramo3 <- ruta_strm %>% filter(distance > PCS[2] & distance <= PCS[3])
tramo4 <- ruta_strm %>% filter(distance > PCS[3] & distance <= PCS[4])
tramo5 <- ruta_strm %>% filter(distance > PCS[4] & distance <= PCS[5])
tramo6 <- ruta_strm %>% filter(distance > PCS[5] & distance <= PCS[6])
tramo7 <- ruta_strm %>% filter(distance > PCS[6] & distance <= PCS[7])
tramo8 <- ruta_strm %>% filter(distance > PCS[7] & distance <= PCS[8])
tramo9 <- ruta_strm %>% filter(distance > PCS[8] & distance <= PCS[9])
tabla <- data.frame( "Tramo" = c("Tramo 1","Tramo 2","Tramo 3","Tramo 4","Tramo 5","Tramo 6","Tramo 7","Tramo 8","Tramo 9","Total"),
"Distancia" = c(sum(tramo1$delta_distance),
sum(tramo2$delta_distance),
sum(tramo3$delta_distance),
sum(tramo4$delta_distance),
sum(tramo5$delta_distance),
sum(tramo6$delta_distance),
sum(tramo7$delta_distance),
sum(tramo8$delta_distance),
sum(tramo9$delta_distance),
sum(ruta_strm$delta_distance)),
"ElevGain" =  c(sum(tramo1$dplus),
sum(tramo2$dplus),
sum(tramo3$dplus),
sum(tramo4$dplus),
sum(tramo5$dplus),
sum(tramo6$dplus),
sum(tramo7$dplus),
sum(tramo8$dplus),
sum(tramo9$dplus),
sum(ruta_strm$dplus)))
hitos <- data.frame(rbind(c(tramo1[1,c("lon","lat","ele")], "Puente Ñilhue"),
c(tramo2[1,c("lon","lat","ele")], "Llanos de Javier"),
c(tramo3[1,c("lon","lat","ele")], "Corral quemado"),
c(tramo4[1,c("lon","lat","ele")], "La Parva"),
c(tramo5[1,c("lon","lat","ele")], "Cancha de carreras"),
c(tramo6[1,c("lon","lat","ele")], "Federacion"),
c(tramo7[1,c("lon","lat","ele")], "Piedra numerada"),
c(tramo8[1,c("lon","lat","ele")], "Refugio del Cepo"),
c(tramo9[1,c("lon","lat","ele")], "La Ermita")))
hitos$lat <- as.numeric(hitos$lat)
hitos$lon <- as.numeric(hitos$lon)
hitossp <- SpatialPointsDataFrame(data=hitos, coords = hitos[,1:2], proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo1sp <- tramo1 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo2sp <- tramo2 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo3sp <- tramo3 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo4sp <- tramo4 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo5sp <- tramo5 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo6sp <- tramo6 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo7sp <- tramo7 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo8sp <- tramo8 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo9sp <- tramo9 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
leaflet(height=1000, width=1000) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$OpenTopoMap) %>% ## uso mapa topografico
addCircleMarkers(data = tramo1sp, radius = 1, col = topo.colors(9)[9], group="Tramo 1") %>%
addCircleMarkers(data = tramo2sp, radius = 1, col = topo.colors(9)[2], group="Tramo 2") %>%
addCircleMarkers(data = tramo3sp, radius = 1, col = topo.colors(9)[7], group="Tramo 3") %>%
addCircleMarkers(data = tramo4sp, radius = 1, col = topo.colors(9)[4], group="Tramo 4") %>%
addCircleMarkers(data = tramo5sp, radius = 1, col = topo.colors(9)[6], group="Tramo 5") %>%
addCircleMarkers(data = tramo6sp, radius = 1, col = topo.colors(9)[5], group="Tramo 6") %>%
addCircleMarkers(data = tramo7sp, radius = 1, col = topo.colors(9)[3], group="Tramo 7") %>%
addCircleMarkers(data = tramo8sp, radius = 1, col = topo.colors(9)[8], group="Tramo 8") %>%
addCircleMarkers(data = tramo9sp, radius = 1, col = topo.colors(9)[1], group="Tramo 9") %>%
addCircleMarkers(data = hitossp, radius = 5, col = "red", popup = hitossp$V4) %>%
addLayersControl(
overlayGroups =c("Tramo 1", "Tramo 2", "Tramo 3", "Tramo 4", "Tramo 5", "Tramo 6", "Tramo 7", "Tramo 8", "Tramo 9"),
options = layersControlOptions(collapsed=TRUE)
)
ggplot(ruta_strm, aes(Distance, ele)) +
geom_area()
ggplot(ruta_strm, aes(distance, ele)) +
geom_area()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS)
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
xlab("Elevacion (msnm)") +
ylab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevacion (msnm)") +
xlab("Distancia") +
theme_minimal()
library(tidyverse)
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
geom_vline(aes(xintercept = PCS))
knitr::opts_chunk$set(echo = TRUE)
library(GPStream)
library(sp)
library(sp)
library(leaflet)
library(sp)
library(leaflet)
library(tidyverse)
ruta_strm <-
read_stream_file("cajon_del_mapocho.gpx") %>%
rename_stream() %>%
differential_stream()
ruta_strm <-
read_stream_file("cajon_del_mapocho.gpx") %>%
rename_stream() %>%
differential_stream()
ruta_sp <- SpatialPointsDataFrame(data=ruta_strm,
coords = ruta_strm[,c("lon","lat")],
proj4string=CRS("+proj=longlat +datum=WGS84"))
PCS <- c(9.65, 22.05, 33.35, 42.05, 45.7, 50.82, 63.5, 81.55, 87.7)
tramo1 <- ruta_strm %>% filter(distance <= PCS[1])
tramo2 <- ruta_strm %>% filter(distance > PCS[1] & distance <= PCS[2])
tramo3 <- ruta_strm %>% filter(distance > PCS[2] & distance <= PCS[3])
tramo4 <- ruta_strm %>% filter(distance > PCS[3] & distance <= PCS[4])
tramo5 <- ruta_strm %>% filter(distance > PCS[4] & distance <= PCS[5])
tramo6 <- ruta_strm %>% filter(distance > PCS[5] & distance <= PCS[6])
tramo7 <- ruta_strm %>% filter(distance > PCS[6] & distance <= PCS[7])
tramo8 <- ruta_strm %>% filter(distance > PCS[7] & distance <= PCS[8])
tramo9 <- ruta_strm %>% filter(distance > PCS[8] & distance <= PCS[9])
tabla <- data.frame( "Tramo" = c("Tramo 1","Tramo 2","Tramo 3","Tramo 4","Tramo 5","Tramo 6","Tramo 7","Tramo 8","Tramo 9","Total"),
"Distancia" = c(sum(tramo1$delta_distance),
sum(tramo2$delta_distance),
sum(tramo3$delta_distance),
sum(tramo4$delta_distance),
sum(tramo5$delta_distance),
sum(tramo6$delta_distance),
sum(tramo7$delta_distance),
sum(tramo8$delta_distance),
sum(tramo9$delta_distance),
sum(ruta_strm$delta_distance)),
"ElevGain" =  c(sum(tramo1$dplus),
sum(tramo2$dplus),
sum(tramo3$dplus),
sum(tramo4$dplus),
sum(tramo5$dplus),
sum(tramo6$dplus),
sum(tramo7$dplus),
sum(tramo8$dplus),
sum(tramo9$dplus),
sum(ruta_strm$dplus)))
View(ruta_strm)
hitos <- data.frame(rbind(c(tramo1[1,c("lon","lat","ele")], "Puente Ñilhue"),
c(tramo2[1,c("lon","lat","ele")], "Llanos de Javier"),
c(tramo3[1,c("lon","lat","ele")], "Corral quemado"),
c(tramo4[1,c("lon","lat","ele")], "La Parva"),
c(tramo5[1,c("lon","lat","ele")], "Cancha de carreras"),
c(tramo6[1,c("lon","lat","ele")], "Federacion"),
c(tramo7[1,c("lon","lat","ele")], "Piedra numerada"),
c(tramo8[1,c("lon","lat","ele")], "Refugio del Cepo"),
c(tramo9[1,c("lon","lat","ele")], "La Ermita")))
hitos$lat <- as.numeric(hitos$lat)
hitos$lon <- as.numeric(hitos$lon)
hitossp <- SpatialPointsDataFrame(data=hitos, coords = hitos[,1:2], proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo1sp <- tramo1 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo2sp <- tramo2 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo3sp <- tramo3 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo4sp <- tramo4 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo5sp <- tramo5 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo6sp <- tramo6 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo7sp <- tramo7 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo8sp <- tramo8 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
tramo9sp <- tramo9 %>% select(lon,lat) %>%
SpatialPointsDataFrame( data = ., coords = .,proj4string=CRS("+proj=longlat +datum=WGS84"))
leaflet(width = '100%') %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$OpenTopoMap) %>% ## uso mapa topografico
addCircleMarkers(data = tramo1sp, radius = 1, col = topo.colors(9)[9], group="Tramo 1") %>%
addCircleMarkers(data = tramo2sp, radius = 1, col = topo.colors(9)[2], group="Tramo 2") %>%
addCircleMarkers(data = tramo3sp, radius = 1, col = topo.colors(9)[7], group="Tramo 3") %>%
addCircleMarkers(data = tramo4sp, radius = 1, col = topo.colors(9)[4], group="Tramo 4") %>%
addCircleMarkers(data = tramo5sp, radius = 1, col = topo.colors(9)[6], group="Tramo 5") %>%
addCircleMarkers(data = tramo6sp, radius = 1, col = topo.colors(9)[5], group="Tramo 6") %>%
addCircleMarkers(data = tramo7sp, radius = 1, col = topo.colors(9)[3], group="Tramo 7") %>%
addCircleMarkers(data = tramo8sp, radius = 1, col = topo.colors(9)[8], group="Tramo 8") %>%
addCircleMarkers(data = tramo9sp, radius = 1, col = topo.colors(9)[1], group="Tramo 9") %>%
addCircleMarkers(data = hitossp, radius = 5, col = "red", popup = hitossp$V4) %>%
addLayersControl(
overlayGroups =c("Tramo 1", "Tramo 2", "Tramo 3", "Tramo 4", "Tramo 5", "Tramo 6", "Tramo 7", "Tramo 8", "Tramo 9"),
options = layersControlOptions(collapsed=TRUE)
)
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
geom_vline(aes(xintercept = PCS))
PCS
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
geom_vline(data = PCS, aes(xintercept = PCS))
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
geom_vline(data = PCS, aes(xintercept = .))
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
geom_vline(data = PCS)
PCS <- data.frame(PCS)
View(PCS)
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
geom_vline(data = PCS, aes(xintercept = PCS))
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline(data = PCS, xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline( xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line()
PCS <- c(9.65, 22.05, 33.35, 42.05, 45.7, 50.82, 63.5, 81.55, 87.7)
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline( xintercept = PCS) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
print(tabla)
library(RColorBrewer)
brewer.pal(n = 8, name = "Dark2")
brewer.pal(n = 9, name = "Dark2")
brewer.pal(n = 9, name = "Paired")
leaflet(width = '100%') %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$OpenTopoMap) %>% ## uso mapa topografico
addCircleMarkers(data = tramo1sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[1], group="Tramo 1") %>%
addCircleMarkers(data = tramo2sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[2], group="Tramo 2") %>%
addCircleMarkers(data = tramo3sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[3], group="Tramo 3") %>%
addCircleMarkers(data = tramo4sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[4], group="Tramo 4") %>%
addCircleMarkers(data = tramo5sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[5], group="Tramo 5") %>%
addCircleMarkers(data = tramo6sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[6], group="Tramo 6") %>%
addCircleMarkers(data = tramo7sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[7], group="Tramo 7") %>%
addCircleMarkers(data = tramo8sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[8], group="Tramo 8") %>%
addCircleMarkers(data = tramo9sp, radius = 1, col = brewer.pal(n = 9, name = "Paired")[9], group="Tramo 9") %>%
addCircleMarkers(data = hitossp, radius = 5, col = "red", popup = hitossp$V4) %>%
addLayersControl(
overlayGroups =c("Tramo 1", "Tramo 2", "Tramo 3", "Tramo 4", "Tramo 5", "Tramo 6", "Tramo 7", "Tramo 8", "Tramo 9"),
options = layersControlOptions(collapsed=TRUE)
)
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline( xintercept = PCS) +
geom_rect(aes(xmin=PCS[-9], xmax = PCS[-1])) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline( xintercept = PCS) +
geom_rect(data = PCS[-1], aes(xmin=PCS[-9], xmax = PCS[-1])) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline( xintercept = PCS) +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot() +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS))
ggplot(ruta_strm, aes(distance, ele)) +
geom_line() +
geom_vline( xintercept = PCS) +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot() +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf))
c(0,PCS[-9])
PCS
ggplot() +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf, fill=1))
ggplot() +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf, fill="red"))
ggplot() +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf), fill="red")
ggplot() +
geom_line(ruta_strm, aes(distance, ele)) +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf), fill="red")
ggplot() +
geom_line(ruta_strm, aes(distance, ele))
ggplot() +
geom_line(ruta_strm, aes(distance, ele))
ggplot(ruta_strm) +
geom_line(aes(distance, ele)) +
geom_rect(aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf), fill="red")
ggplot(ruta_strm) +
geom_line(aes(distance, ele)) +
geom_rect(data = 1:9, aes(xmin=c(0,PCS[-9]), xmax = PCS, ymin = -Inf, ymax = Inf), fill="red")
PCSdf <- data.frame("xmin"=c(0,PCS[-9]), "xmax"=PCS, "fill" = brewer.pal(n = 9, name = "Paired"))
View(PCSdf)
ggplot(ruta_strm) +
geom_line(aes(distance, ele)) +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xman, ymin = -Inf, ymax = Inf), fill="red")
ggplot(ruta_strm) +
geom_line(aes(distance, ele)) +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf), fill="red")
ggplot() +
geom_line(data =ruta_strm, aes(distance, ele)) +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf), fill="red")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf), fill="red") +
geom_line(data =ruta_strm, aes(distance, ele))
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, , fill=fill)) +
geom_line(data =ruta_strm, aes(distance, ele))
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf,fill=fill)) +
geom_line(data =ruta_strm, aes(distance, ele))
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill)) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill), alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal()
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill), alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = element_blank())
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill), alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
colores <- brewer.pal(n = 9, name = "Paired")
leaflet(width = '100%') %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$OpenTopoMap) %>% ## uso mapa topografico
addCircleMarkers(data = tramo1sp, radius = 1, col = colorFactor(colores[1]), group="Tramo 1") %>%
addCircleMarkers(data = tramo2sp, radius = 1, col = colores[2], group="Tramo 2") %>%
addCircleMarkers(data = tramo3sp, radius = 1, col = colores[3], group="Tramo 3") %>%
addCircleMarkers(data = tramo4sp, radius = 1, col = colores[4], group="Tramo 4") %>%
addCircleMarkers(data = tramo5sp, radius = 1, col = colores[5], group="Tramo 5") %>%
addCircleMarkers(data = tramo6sp, radius = 1, col = colores[6], group="Tramo 6") %>%
addCircleMarkers(data = tramo7sp, radius = 1, col = colores[7], group="Tramo 7") %>%
addCircleMarkers(data = tramo8sp, radius = 1, col = colores[8], group="Tramo 8") %>%
addCircleMarkers(data = tramo9sp, radius = 1, col = colores[9], group="Tramo 9") %>%
addCircleMarkers(data = hitossp, radius = 5, col = "red", popup = hitossp$V4) %>%
addLayersControl(
overlayGroups =c("Tramo 1", "Tramo 2", "Tramo 3", "Tramo 4", "Tramo 5", "Tramo 6", "Tramo 7", "Tramo 8", "Tramo 9"),
options = layersControlOptions(collapsed=TRUE)
)
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill), alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf),fill=fill, alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf), fill=fill, alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf), alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill),col=colores, alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf, fill=fill),fill=colores, alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf),fill=colores, alpha = 0.5) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
leaflet(width = '100%') %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addProviderTiles(providers$OpenTopoMap) %>% ## uso mapa topografico
addCircleMarkers(data = tramo1sp, radius = 1, col = colores[1], group="Tramo 1") %>%
addCircleMarkers(data = tramo2sp, radius = 1, col = colores[2], group="Tramo 2") %>%
addCircleMarkers(data = tramo3sp, radius = 1, col = colores[3], group="Tramo 3") %>%
addCircleMarkers(data = tramo4sp, radius = 1, col = colores[4], group="Tramo 4") %>%
addCircleMarkers(data = tramo5sp, radius = 1, col = colores[5], group="Tramo 5") %>%
addCircleMarkers(data = tramo6sp, radius = 1, col = colores[6], group="Tramo 6") %>%
addCircleMarkers(data = tramo7sp, radius = 1, col = colores[7], group="Tramo 7") %>%
addCircleMarkers(data = tramo8sp, radius = 1, col = colores[8], group="Tramo 8") %>%
addCircleMarkers(data = tramo9sp, radius = 1, col = colores[9], group="Tramo 9") %>%
addCircleMarkers(data = hitossp, radius = 5, col = "red", popup = hitossp$V4) %>%
addLayersControl(
overlayGroups =c("Tramo 1", "Tramo 2", "Tramo 3", "Tramo 4", "Tramo 5", "Tramo 6", "Tramo 7", "Tramo 8", "Tramo 9"),
options = layersControlOptions(collapsed=TRUE)
)
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf),fill=colores, alpha = 0.8) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
```{r, echo=FALSE, fig.asp = .62}}
```{r, echo=FALSE,fig.width = 5, fig.asp = .62}}
PCSdf <- data.frame("xmin"=c(0,PCS[-9]), "xmax"=PCS, "fill" = colores)
ggplot() +
geom_rect(data=PCSdf, aes(xmin=xmin, xmax = xmax, ymin = -Inf, ymax = Inf),fill=colores, alpha = 0.8) +
geom_line(data =ruta_strm, aes(distance, ele)) +
ylab("Elevación (msnm)") +
xlab("Distancia") +
theme_minimal() +
theme(legend.position = "NULL")
```{r, fig.width = 5, fig.asp = .62,  echo=FALSE,}
```{r, fig.width = 5, fig.asp = .62,  echo=FALSE}
PCSdf <- data.frame("xmin"=c(0,PCS[-9]), "xmax"=PCS, "fill" = colores)
